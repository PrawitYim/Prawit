using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class AIController : MonoBehaviour
{
    public Transform player; // ?????????????????
    public float moveSpeed = 5f; // ???????????????????????
    public float detectionRange = 10f; // ???????????????????????????

    private Vector3 initialPosition; // ?????????????????? AI
    private bool playerDetected = false; // ???????????????????????

    void Start()
    {
        initialPosition = transform.position;
    }

    void Update()
    {
        if (!playerDetected)
        {
            Patrol();
        }
        else
        {
            ChasePlayer();
        }
    }

    void Patrol()
    {
        // ?????????
        // ???????????????? AI ???????????? ???????????????
        transform.Translate(Vector3.forward * moveSpeed * Time.deltaTime);
        if (Vector3.Distance(transform.position, initialPosition) > detectionRange)
        {
            // ???????????????? AI ?????????????????????????????????
            transform.Rotate(Vector3.up * 180f);
        }
    }

    void ChasePlayer()
    {
        // ?????????????????????
        transform.LookAt(player);
        transform.Translate(Vector3.forward * moveSpeed * Time.deltaTime);

        // ???????????????????????????????
        if (Vector3.Distance(transform.position, player.position) < 2f)
        {
            // ?????????????????
            AttackPlayer();
        }
    }

    void AttackPlayer()
    {
        // ???????????????? AI ????????????
        Debug.Log("Attacking Player!");
        // ???????????????????????????????????????????????????????????????
    }

    void OnTriggerEnter(Collider other)
    {
        // ??????????????????????
        if (other.CompareTag("Player"))
        {
            playerDetected = true;
            player = other.transform;
        }
    }

    void OnTriggerExit(Collider other)
    {
        // ???????????????????????????????
        if (other.CompareTag("Player"))
        {
            playerDetected = false;
        }
    }
}
